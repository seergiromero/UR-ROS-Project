<?xml version="1.0"?>

<!-- chesslab_robot = UR (UR3 o UR3e) + robotiq_85_gripper -->
<robot name="chesslab_robot" xmlns:xacro="http://ros.org/wiki/xacro">

    <!-- Gazebo plugins -->
    <!-- <gazebo reference="world"></gazebo> -->
    <xacro:arg name="simulation_controllers" default="$(find chesslab_setup2)/config/chesslab_controllers.yaml" />
    <gazebo>
        <plugin filename="gz_ros2_control-system" name="gz_ros2_control::GazeboSimROS2ControlPlugin">
            <parameters>$(arg simulation_controllers)</parameters>
        </plugin>
    </gazebo>

    <!-- Arguments for parent and origin -->
    <xacro:arg name="parent" default="world"/>
    <xacro:arg name="origin_xyz" default="0.37 0 -0.004"/>
    <xacro:arg name="origin_rpy" default="0 0 1.57"/>

    <!-- create link fixed to the "world" -->
    <link name="$(arg parent)" />



    <!-- ############ -->
    <!-- #### UR #### -->
    <!-- ############ -->
    <!-- robot name parameter -->
    <xacro:arg name="name" default="ur"/>
    <!-- import main macro -->
    <xacro:include filename="$(find ur_description)/urdf/ur_macro.xacro"/>

    <!-- possible 'ur_type' values: ur3, ur3e, ur5, ur5e, ur7e, ur10, ur10e, ur12e, ur16e, ur15, ur20, ur30 -->
    <!-- the default value should raise an error in case this was called without defining the type -->
    <xacro:arg name="ur_type" default="ur5x"/>

    <!-- parameters -->
    <xacro:arg name="tf_prefix" default="" />
    <xacro:arg name="joint_limit_params" default="$(find ur_description)/config/$(arg ur_type)/joint_limits.yaml"/>
    <xacro:arg name="kinematics_params" default="$(find ur_description)/config/$(arg ur_type)/default_kinematics.yaml"/>
    <xacro:arg name="physical_params" default="$(find ur_description)/config/$(arg ur_type)/physical_parameters.yaml"/>
    <xacro:arg name="visual_params" default="$(find ur_description)/config/$(arg ur_type)/visual_parameters.yaml"/>
    <xacro:arg name="transmission_hw_interface" default=""/>
    <xacro:arg name="safety_limits" default="false"/>
    <xacro:arg name="safety_pos_margin" default="0.15"/>
    <xacro:arg name="safety_k_position" default="20"/>
    <!-- ros2_control related parameters -->
    <xacro:arg name="headless_mode" default="false" />
    <xacro:arg name="robot_ip" default="0.0.0.0" />
    <xacro:arg name="script_filename" default=""/>
    <xacro:arg name="output_recipe_filename" default=""/>
    <xacro:arg name="input_recipe_filename" default=""/>
    <xacro:arg name="reverse_ip" default="0.0.0.0"/>
    <xacro:arg name="script_command_port" default="50004"/>
    <xacro:arg name="reverse_port" default="50001"/>
    <xacro:arg name="script_sender_port" default="50002"/>
    <xacro:arg name="trajectory_port" default="50003"/>
    <!--   tool communication related parameters-->
    <xacro:arg name="use_tool_communication" default="false" />
    <xacro:arg name="tool_voltage" default="0" />
    <xacro:arg name="tool_parity" default="0" />
    <xacro:arg name="tool_baud_rate" default="115200" />
    <xacro:arg name="tool_stop_bits" default="1" />
    <xacro:arg name="tool_rx_idle_chars" default="1.5" />
    <xacro:arg name="tool_tx_idle_chars" default="3.5" />
    <xacro:arg name="tool_device_name" default="/tmp/ttyUR" />
    <xacro:arg name="tool_tcp_port" default="54321" />

    <!-- Simulation parameters -->
    <xacro:arg name="use_fake_hardware" default="true" />
    <xacro:arg name="fake_sensor_commands" default="false" />
    <xacro:arg name="sim_gazebo" default="false" />
    <xacro:arg name="sim_ignition" default="true" />

    <!-- initial position for simulations (Fake Hardware, Gazebo, Ignition) -->
    <xacro:arg name="initial_positions_file" default="$(find ur_description)/config/initial_positions.yaml"/>

    <!-- convert to property to use substitution in function -->
    <xacro:property name="initial_positions_file" default="$(arg initial_positions_file)"/>
    <xacro:property name="is_sim_gazebo" value="$(arg sim_gazebo)"/>
    <xacro:property name="is_sim_ignition" value="$(arg sim_ignition)"/>

    <xacro:ur_robot
        name="$(arg name)"
        tf_prefix="$(arg tf_prefix)"
        parent="$(arg parent)"
        joint_limits_parameters_file="$(arg joint_limit_params)"
        kinematics_parameters_file="$(arg kinematics_params)"
        physical_parameters_file="$(arg physical_params)"
        visual_parameters_file="$(arg visual_params)"
        transmission_hw_interface="$(arg transmission_hw_interface)"
        safety_limits="$(arg safety_limits)"
        safety_pos_margin="$(arg safety_pos_margin)"
        safety_k_position="$(arg safety_k_position)"
        use_fake_hardware="$(arg use_fake_hardware)"
        fake_sensor_commands="$(arg fake_sensor_commands)"
        sim_gazebo="$(arg sim_gazebo)"
        sim_ignition="$(arg sim_ignition)"
        headless_mode="$(arg headless_mode)"
        initial_positions="${xacro.load_yaml(initial_positions_file)}"
        use_tool_communication="$(arg use_tool_communication)"
        tool_voltage="$(arg tool_voltage)"
        tool_parity="$(arg tool_parity)"
        tool_baud_rate="$(arg tool_baud_rate)"
        tool_stop_bits="$(arg tool_stop_bits)"
        tool_rx_idle_chars="$(arg tool_rx_idle_chars)"
        tool_tx_idle_chars="$(arg tool_tx_idle_chars)"
        tool_device_name="$(arg tool_device_name)"
        tool_tcp_port="$(arg tool_tcp_port)"
        robot_ip="$(arg robot_ip)"
        script_filename="$(arg script_filename)"
        output_recipe_filename="$(arg output_recipe_filename)"
        input_recipe_filename="$(arg input_recipe_filename)"
        reverse_ip="$(arg reverse_ip)"
        script_command_port="$(arg script_command_port)"
        reverse_port="$(arg reverse_port)"
        script_sender_port="$(arg script_sender_port)"
        trajectory_port="$(arg trajectory_port)"
        >
        <origin xyz="$(arg origin_xyz)" rpy="$(arg origin_rpy)" />          <!-- position robot in the world -->
    </xacro:ur_robot>

    <!-- ros2 control instance -->
     <!-- JAZZY: -->
    <!-- <xacro:include filename="$(find ur_simulation_gz)/urdf/ur_gz.ros2_control.xacro" /> -->
    <!-- <xacro:ur_ros2_control
        name="$(arg name)"
        tf_prefix="$(arg tf_prefix)"
        sim_ignition="true"
        use_fake_hardware="true"
    /> -->

    <!-- ############# -->
    <!-- ## ADAPTER ## -->
    <!-- ############# -->
    <xacro:include filename="$(find robotiq_85_description)/urdf/ur_to_robotiq_adapter_macro.xacro"/>
    <xacro:ur_to_robotiq prefix="" connected_to="$(arg tf_prefix)tool0" rotation="0.0"/>



    <!-- ############# -->
    <!-- ## GRIPPER ## -->
    <!-- ############# -->
    <xacro:include filename="$(find robotiq_85_description)/urdf/robotiq_85_gripper_macro.xacro"/>
    <xacro:robotiq_85_gripper prefix="" parent="gripper_mount_link"  >
        <origin xyz="0 0 0" rpy="0 0 0" />  <!-- position robot in the world -->
    </xacro:robotiq_85_gripper>

    <!-- ros2 control include -->
    <xacro:include filename="$(find robotiq_85_gz)/urdf/robotiq_85_gripper_gz.ros2_control.xacro"/>
    <xacro:robotiq_85_gripper_ros2_control name="RobotiqGripperSystem"/>

    <gazebo reference="robotiq_85_left_knuckle_link">
        <kp>1000000.0</kp>
        <kd>100.0</kd>
        <mu1>30.0</mu1>
        <mu2>30.0</mu2>
        <maxVel>1.0</maxVel>
        <minDepth>0.001</minDepth>
        <material>Gazebo/Grey</material>
    </gazebo>

    <gazebo reference="robotiq_85_right_knuckle_link">
        <kp>1000000.0</kp>
        <kd>100.0</kd>
        <mu1>30.0</mu1>
        <mu2>30.0</mu2>
        <maxVel>1.0</maxVel>
        <minDepth>0.001</minDepth>
        <material>Gazebo/Grey</material>
    </gazebo>

    <gazebo reference="robotiq_85_left_finger_tip_link">
        <kp>1000000.0</kp>
        <kd>100.0</kd>
        <mu1>30.0</mu1>
        <mu2>30.0</mu2>
        <maxVel>1.0</maxVel>
        <minDepth>0.001</minDepth>
        <material>Gazebo/Grey</material>
    </gazebo>

    <gazebo reference="robotiq_85_right_finger_tip_link">
        <kp>1000000.0</kp>
        <kd>100.0</kd>
        <mu1>30.0</mu1>
        <mu2>30.0</mu2>
        <maxVel>1.0</maxVel>
        <minDepth>0.001</minDepth>
        <material>Gazebo/Grey</material>
    </gazebo>

</robot>
